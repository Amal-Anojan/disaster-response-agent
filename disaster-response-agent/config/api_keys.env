# API Keys Configuration
# Copy this file to api_keys.env and set your actual API keys
# DO NOT commit api_keys.env to version control!

# =============================================================================
# AI SERVICE API KEYS
# =============================================================================

# Cerebras API Key (for vision analysis)
# Get your free API key from: https://cloud.cerebras.ai/
# Free tier includes generous limits for testing and development
CEREBRAS_API_KEY=your_cerebras_api_key_here

# Google Gemini API Key (for LLM services)
# Get your free API key from: https://makersuite.google.com/app/apikey
# Free tier includes 15 requests per minute
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite (default - no credentials needed)
DATABASE_URL=sqlite:///data/disaster_response.db

# PostgreSQL (if using PostgreSQL instead of SQLite)
# DATABASE_URL=postgresql://username:password@localhost:5432/disaster_response
# POSTGRES_USER=disaster_user
# POSTGRES_PASSWORD=your_secure_password
# POSTGRES_DB=disaster_response
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret key for JWT tokens and encryption
# Generate a secure random key: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your_secret_key_here_generate_a_long_random_string

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Rate Limiting
RATE_LIMIT_STORAGE=memory://
# For Redis-based rate limiting:
# RATE_LIMIT_STORAGE=redis://localhost:6379

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# Weather API (optional - for enhanced situational awareness)
# OpenWeatherMap: https://openweathermap.org/api
WEATHER_API_KEY=your_weather_api_key_here

# Maps API (optional - for enhanced location services)
# Google Maps: https://developers.google.com/maps
GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# Mapbox (alternative to Google Maps)
# Mapbox: https://www.mapbox.com/
MAPBOX_API_KEY=your_mapbox_api_key_here

# =============================================================================
# NOTIFICATION SERVICES (OPTIONAL)
# =============================================================================

# Email notifications (SMTP)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_FROM_EMAIL=noreply@disaster-response.ai

# Twilio (for SMS notifications)
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+1234567890

# Slack (for team notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# =============================================================================
# EXTERNAL SERVICES (OPTIONAL)
# =============================================================================

# Redis (for caching and session storage)
REDIS_URL=redis://localhost:6379/0

# Elasticsearch (for logging and analytics)
ELASTICSEARCH_URL=http://localhost:9200

# Sentry (for error tracking)
SENTRY_DSN=your_sentry_dsn_here

# =============================================================================
# CLOUD STORAGE (OPTIONAL)
# =============================================================================

# AWS S3 (for file storage and backups)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_BUCKET_NAME=disaster-response-storage

# Azure Storage (alternative to AWS S3)
AZURE_STORAGE_ACCOUNT=your_storage_account
AZURE_STORAGE_KEY=your_storage_key
AZURE_CONTAINER_NAME=disaster-response

# Google Cloud Storage (alternative to AWS S3)
GOOGLE_CLOUD_PROJECT=your_project_id
GOOGLE_CLOUD_BUCKET=disaster-response-storage
# Path to service account key file:
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account-key.json

# =============================================================================
# MONITORING AND ANALYTICS (OPTIONAL)
# =============================================================================

# Google Analytics (for dashboard usage tracking)
GOOGLE_ANALYTICS_ID=GA_MEASUREMENT_ID

# Mixpanel (for user behavior analytics)
MIXPANEL_TOKEN=your_mixpanel_token

# New Relic (for application monitoring)
NEW_RELIC_LICENSE_KEY=your_new_relic_license_key
NEW_RELIC_APP_NAME=Disaster Response Agent

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Environment setting
ENVIRONMENT=development  # development, staging, production

# Debug mode
DEBUG=false

# Test mode (uses mock APIs instead of real ones)
TEST_MODE=false

# Mock API responses for testing
MOCK_CEREBRAS_API=false
MOCK_GEMINI_API=false

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application host and port
HOST=0.0.0.0
PORT=8080

# Streamlit dashboard configuration
STREAMLIT_HOST=0.0.0.0
STREAMLIT_PORT=8501

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:8501,http://127.0.0.1:8501,http://localhost:3000

# Maximum file upload size (in MB)
MAX_UPLOAD_SIZE=50

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Worker processes for FastAPI
WORKERS=4

# Database connection pool size
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# Cache settings
CACHE_TYPE=memory  # memory, redis
CACHE_DEFAULT_TIMEOUT=300
CACHE_MAX_SIZE=500

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# Log file path
LOG_FILE=logs/app.log

# Log to console
LOG_TO_CONSOLE=true

# External logging
LOG_TO_FILE=true
LOG_ROTATION=time  # time, size
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Local backup path
BACKUP_LOCAL_PATH=/backup/disaster_response/

# =============================================================================
# QUICK SETUP FOR DEVELOPMENT
# =============================================================================

# For quick local development, you only need to set these:
# CEREBRAS_API_KEY=your_cerebras_api_key
# GEMINI_API_KEY=your_gemini_api_key
# SECRET_KEY=generate_a_random_string

# All other settings have sensible defaults for development

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit this file with real API keys to version control
# 2. Use different API keys for development, staging, and production
# 3. Regularly rotate your API keys and secrets
# 4. Use environment-specific configuration management in production
# 5. Consider using services like HashiCorp Vault for secret management
# 6. Enable 2FA on all service accounts where possible

# =============================================================================
# GETTING API KEYS - FREE TIERS
# =============================================================================

# Cerebras AI (Vision Analysis):
# - Website: https://cloud.cerebras.ai/
# - Free tier: Generous limits for development
# - Required for: Image analysis and damage assessment

# Google Gemini (Language Model):
# - Website: https://makersuite.google.com/
# - Free tier: 15 requests per minute
# - Required for: Text analysis and action plan generation

# Optional Services (enhance functionality):
# - OpenWeatherMap: 1,000 calls/day free
# - Google Maps: $200 monthly credit
# - Mapbox: 50,000 requests/month free

# All required APIs have generous free tiers suitable for development
# and small-scale deployments!